<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		minWidth="955"
		minHeight="600"
		applicationComplete="applicationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
		import mx.events.FlexEvent;

		import org.as3commons.aop.MessageWriter;
		import org.as3commons.aop.advice.IAdvice;
		import org.as3commons.aop.advice.TraceMethodAroundAdvice;
		import org.as3commons.aop.advisor.impl.PointcutAdvisor;
		import org.as3commons.aop.factory.impl.AOPProxyFactory;
		import org.as3commons.aop.pointcut.IPointcut;
		import org.as3commons.aop.pointcut.impl.name.MethodNameMatchPointcut;
		import org.as3commons.async.operation.IOperation;
		import org.as3commons.async.operation.event.OperationEvent;

		protected function applicationCompleteHandler(event:FlexEvent):void {
			var factory:AOPProxyFactory = new AOPProxyFactory();
			var pointcut:IPointcut = new MethodNameMatchPointcut(["writeMessage", "writeYetAnotherMessage", "writeMessageThrowError"]);
			var methodAdvice:IAdvice = new TraceMethodAroundAdvice();
			factory.addAdvisor(new PointcutAdvisor(pointcut, methodAdvice));
			factory.target = MessageWriter;

			var handler:Function = function(event:OperationEvent):void {
				var writer:MessageWriter = factory.getProxy(["Default message"]);
				writer.writeMessage();
				writer.writeAnotherMessage();

				try {
					writer.writeMessageThrowError();
				} catch (e:Error) {
					trace("Caught error: " + e);
				}

				writer.writeYetAnotherMessage();

				try {
					// new proxy instance without constructor args -> should throw assert error
					var writerB:MessageWriter = factory.getProxy([null]);
					writerB.writeMessage();
				} catch (e:Error) {
					trace("Caught error: " + e);
				}
			};

			var operation:IOperation = factory.load();
			operation.addCompleteListener(handler);
		}
		]]>
	</fx:Script>

</s:Application>
